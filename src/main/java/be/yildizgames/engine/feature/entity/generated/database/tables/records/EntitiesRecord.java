/*
 * This file is part of the Yildiz-Engine project, licenced under the MIT License  (MIT)
 *
 *  Copyright (c) 2019 Gr√©gory Van den Borre
 *
 *  More infos available: https://engine.yildiz-games.be
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 *  documentation files (the "Software"), to deal in the Software without restriction, including without
 *  limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 *  of the Software, and to permit persons to whom the Software is furnished to do so,
 *  subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all copies or substantial
 *  portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
 *  OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM,
 *  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  SOFTWARE.
 *
 */

/*
 * This file is generated by jOOQ.
*/
package be.yildizgames.engine.feature.entity.generated.database.tables.records;


import be.yildizgames.engine.feature.entity.generated.database.tables.Entities;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntitiesRecord extends UpdatableRecordImpl<EntitiesRecord> implements Record13<Integer, Byte, Short, Byte, Short, Short, Boolean, Double, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = -610943899;

    /**
     * Setter for <code>PUBLIC.ENTITIES.ENT_ID</code>.
     */
    public void setEntId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.ENT_ID</code>.
     */
    public Integer getEntId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.TYPE</code>.
     */
    public void setType(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.TYPE</code>.
     */
    public Byte getType() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.PLY_ID</code>.
     */
    public void setPlyId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.PLY_ID</code>.
     */
    public Short getPlyId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.MAP_ID</code>.
     */
    public void setMapId(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.MAP_ID</code>.
     */
    public Byte getMapId() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.HIT_POINT</code>.
     */
    public void setHitPoint(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.HIT_POINT</code>.
     */
    public Short getHitPoint() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.ENERGY_POINT</code>.
     */
    public void setEnergyPoint(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.ENERGY_POINT</code>.
     */
    public Short getEnergyPoint() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.ACTIVE</code>.
     */
    public void setActive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.ACTIVE</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.POSITION_X</code>.
     */
    public void setPositionX(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.POSITION_X</code>.
     */
    public Double getPositionX() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.POSITION_Y</code>.
     */
    public void setPositionY(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.POSITION_Y</code>.
     */
    public Double getPositionY() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.POSITION_Z</code>.
     */
    public void setPositionZ(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.POSITION_Z</code>.
     */
    public Double getPositionZ() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.DIRECTION_X</code>.
     */
    public void setDirectionX(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.DIRECTION_X</code>.
     */
    public Double getDirectionX() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.DIRECTION_Y</code>.
     */
    public void setDirectionY(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.DIRECTION_Y</code>.
     */
    public Double getDirectionY() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>PUBLIC.ENTITIES.DIRECTION_Z</code>.
     */
    public void setDirectionZ(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>PUBLIC.ENTITIES.DIRECTION_Z</code>.
     */
    public Double getDirectionZ() {
        return (Double) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Byte, Short, Byte, Short, Short, Boolean, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Byte, Short, Byte, Short, Short, Boolean, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Entities.ENTITIES.ENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return Entities.ENTITIES.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Entities.ENTITIES.PLY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Entities.ENTITIES.MAP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Entities.ENTITIES.HIT_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return Entities.ENTITIES.ENERGY_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return Entities.ENTITIES.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Entities.ENTITIES.POSITION_X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return Entities.ENTITIES.POSITION_Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return Entities.ENTITIES.POSITION_Z;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return Entities.ENTITIES.DIRECTION_X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field12() {
        return Entities.ENTITIES.DIRECTION_Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field13() {
        return Entities.ENTITIES.DIRECTION_Z;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getEntId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getPlyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getHitPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component6() {
        return getEnergyPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getPositionX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getPositionY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component10() {
        return getPositionZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component11() {
        return getDirectionX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component12() {
        return getDirectionY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component13() {
        return getDirectionZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEntId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getPlyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getHitPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getEnergyPoint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getPositionX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getPositionY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getPositionZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getDirectionX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value12() {
        return getDirectionY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value13() {
        return getDirectionZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value1(Integer value) {
        setEntId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value2(Byte value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value3(Short value) {
        setPlyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value4(Byte value) {
        setMapId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value5(Short value) {
        setHitPoint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value6(Short value) {
        setEnergyPoint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value7(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value8(Double value) {
        setPositionX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value9(Double value) {
        setPositionY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value10(Double value) {
        setPositionZ(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value11(Double value) {
        setDirectionX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value12(Double value) {
        setDirectionY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord value13(Double value) {
        setDirectionZ(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntitiesRecord values(Integer value1, Byte value2, Short value3, Byte value4, Short value5, Short value6, Boolean value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntitiesRecord
     */
    public EntitiesRecord() {
        super(Entities.ENTITIES);
    }

    /**
     * Create a detached, initialised EntitiesRecord
     */
    public EntitiesRecord(Integer entId, Byte type, Short plyId, Byte mapId, Short hitPoint, Short energyPoint, Boolean active, Double positionX, Double positionY, Double positionZ, Double directionX, Double directionY, Double directionZ) {
        super(Entities.ENTITIES);

        set(0, entId);
        set(1, type);
        set(2, plyId);
        set(3, mapId);
        set(4, hitPoint);
        set(5, energyPoint);
        set(6, active);
        set(7, positionX);
        set(8, positionY);
        set(9, positionZ);
        set(10, directionX);
        set(11, directionY);
        set(12, directionZ);
    }
}
